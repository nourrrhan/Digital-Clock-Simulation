;// digital clock with alarm
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;unsigned char hours, min, sec;  // for current time
;
;int on = 0;  // flag sound on or off
;unsigned char alarm_hours = 0, alarm_minutes = 1; // set alarm
;
;
;int dec2bcd(int decimal)
; 0000 000C {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000D     // convert decimal number to binary
; 0000 000E    return (((decimal / 10) << 4) | (decimal % 10));
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;	decimal -> R16,R17
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 000F }
;PCODE: $0000001D VOL: 0
;
;void main(void)
; 0000 0012 {
;PCODE: $0000001E VOL: 0
; 0000 0013     DDRD=0xFF; // output hours
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0014     DDRC=0xFF; // output minutes
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0015     DDRB=0xFF; // output seconds
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0016 
; 0000 0017 
; 0000 0018     DDRA.0=0; // input button to close alarm
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0019     PORTA.0=1; // pull up button
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 001A     DDRA.7=1;  // output sound for alarm
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 001B     PORTA.7=0; // turn off sound
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 001C 
; 0000 001D while (1)
;PCODE: $0000002D VOL: 0
; 0000 001E     {
; 0000 001F          for(hours = 0; hours < 24; hours++)
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0020          {
; 0000 0021             PORTD = dec2bcd(hours);    // output hour in 7 segamnt
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0022 
; 0000 0023             for(min = 0; min < 60; min++)
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0024             {
; 0000 0025                 PORTC = dec2bcd(min);  // output minutes in 7 segmant
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0026 
; 0000 0027                 // if current time = alarm time and sound is off
; 0000 0028                 if(hours == alarm_hours && min == alarm_minutes && on == 0)
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0029                 {
; 0000 002A                     PORTA.7=1;   // sound on
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 002B                     on = 1;     // flag sound on
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 002C                 }
; 0000 002D 
; 0000 002E                 for(sec = 0; sec < 60; sec++)
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 002F                 {
; 0000 0030                     PORTB = dec2bcd(sec); // output seconds in 7 segmant
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0031                     delay_ms(100);     // delay for 1 second
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0032 
; 0000 0033                     if(PINA.0 == 0)  // when button is pushed
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0034                     {
; 0000 0035                         PORTA.7=0;  // sound off
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0036                     }
; 0000 0037                 }
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0038 
; 0000 0039                 if(min != alarm_minutes)  //  if current minute != alarm minute
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 003A                 {
; 0000 003B                     PORTA.7=0;  // sound off
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 003C                     on = 0;    // flag sound off
;PCODE: $00000072 VOL: 0
; 0000 003D                 }
; 0000 003E             }
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 003F          }
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0040     }
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0041 }
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
